{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.18",
    "title": "Swagger YourPet",
    "description": "API documentation for GoIT. Team NodeMoon - project  YourPet. [Backend github repository](https://github.com/SoloviovO/YourPet-backend)"
  },
  "servers": [
    {
      "url": "https://yourpet-backend.onrender.com/api"
    },
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "Users endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Friends",
      "description": "Friend endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a user object + accessToken + refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "404": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns accessToken + refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "accessToken invalid",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": " "
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET  . . . . . . . . . . . . . .",
            "content": {}
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "User current",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns information about the User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": ["User"],
        "summary": "UpdateUserInfo",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Specify one of the :",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change of information about the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/user/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Avatar",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "UserInfo object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change the avatar on the user page",
            "content": {
              "appliation/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad avatar"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/user/favorite": {
      "get": {
        "tags": ["User"],
        "summary": "Favorite",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get favorite notices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/user/favorite/{id}": {
      "post": {
        "tags": ["User"],
        "summary": "Add Favorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Add notices to  favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "This entry has already been added to the favorites list"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "This entry is not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete Favorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Delete notices to  favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "This entry is not in your favorites list",
            "content": {}
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by category",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": ["sell", "lost-found", "for-free"]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get notices by category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notices"
                }
              }
            }
          },
          "400": {
            "description": "Invalid category, please select one of next category: sell; lost-found; for-free"
          }
        }
      },
      "post": {
        "tags": ["Notices"],
        "summary": "Adds notices to the selected category",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticesRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Added an ad to the category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notices"
                }
              }
            }
          },
          "400": {
            "description": "Invalid category, please select one of next category: sell; lost-found; for-free"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/notices/find": {
      "get": {
        "tags": ["Notices"],
        "summary": "Find notice by title",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 16
            },
            "description": "The value is assigned to the title",
            "required": true
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": ["sell", "lost-found", "for-free"]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Find notice by title and category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindeTitleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": " Find favorite notice by title ",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 16
            },
            "description": "The value is assigned to the title",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return favorite notice by title",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/notices/owner": {
      "get": {
        "tags": ["Notices"],
        "summary": " Find own notice by title  ",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 16
            },
            "description": "The value is assigned to the title",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return favorite notice by title",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/notices/user": {
      "get": {
        "tags": ["Notices"],
        "summary": "Notices by authorized user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return notices by authorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/notices/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get full info about notice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return full info about notice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notices"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by authorized user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Delete success"
          },
          "400": {
            "description": "This notice is not yours"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "There is no such id"
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get friends or sponsor",
        "responses": {
          "200": {
            "description": "Return friends or sponsor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return news",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news/title": {
      "get": {
        "tags": ["News"],
        "summary": "Found news by title",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 16
            },
            "required": true,
            "description": "Set title for new"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return news by title",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Your request is empty"
          },
          "404": {
            "description": "No results for your request"
          }
        }
      }
    },
    "/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add your pet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return add pet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required field"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet by authorized user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Delete success"
          },
          "400": {
            "description": "This pet is not yours"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "There is no such id"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "integer",
            "minLength": 6,
            "maxLength": 16,
            "pattern": " ^ ^ (?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,16}) $",
            "example": "qWerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(/^\\d{2}\\.\\d{2}\\.\\d{4}$/)$"
          },
          "phone": {
            "type": "string",
            "pattern": "^(/^\\+380\\d{9}$/)$"
          },
          "city": {
            "type": "string",
            "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "example": {
          "user": {
            "id": "6463738424c0812f33a0a3e3",
            "email": "user@example.com",
            "name": "Name",
            "birthday": "00.00.0000",
            "phone": "+380000000000",
            "city": "City",
            "image": "https://drive.google.com/file/d/1JKalmY5-x8wbrspY075e3N08K2e5LWnU/view"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "integer",
            "minLength": 6,
            "maxLength": 16,
            "pattern": " ^ (?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,16}) $",
            "example": "qWerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDYzNzM4NDI0YzA4MTJmMzNhMGEzZTMiLCJzZXNzaW9uS2V5IjoiNzdkZmZlNzctMTk0OS00Y2E3LWFlNjMtMjY2NTI5NjYzOTEwIiwiaWF0IjoxNjg0MjM5MzY0LCJleHAiOjE2ODQ0MTkzNjR9.Ejnv8vNIRUPyhyb4Sspt5OKYbT-5tSoGbxAoVHSOxnI",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDYzNzM4NDI0YzA4MTJmMzNhMGEzZTMiLCJzZXNzaW9uS2V5IjoiNzdkZmZlNzctMTk0OS00Y2E3LWFlNjMtMjY2NTI5NjYzOTEwIiwiaWF0IjoxNjg0MjM5MzY0LCJleHAiOjE4NjQyMzkzNjR9.e6nyxd_k0OC7jUBHL_JHKcbCtymvmu4f8ihJWWtBipk",
          "user": {
            "id": "6463738424c0812f33a0a3e3",
            "email": "user@example.com",
            "name": "Name",
            "birthday": "00.00.0000",
            "phone": "+380000000000",
            "city": "City",
            "image": "https://drive.google.com/file/d/1JKalmY5-x8wbrspY075e3N08K2e5LWnU/view"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDYzNzM4NDI0YzA4MTJmMzNhMGEzZTMiLCJzZXNzaW9uS2V5IjoiNzdkZmZlNzctMTk0OS00Y2E3LWFlNjMtMjY2NTI5NjYzOTEwIiwiaWF0IjoxNjg0MjM5MzY0LCJleHAiOjE4NjQyMzkzNjR9.e6nyxd_k0OC7jUBHL_JHKcbCtymvmu4f8ihJWWtBipk"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDYzNzM4NDI0YzA4MTJmMzNhMGEzZTMiLCJzZXNzaW9uS2V5IjoiNzdkZmZlNzctMTk0OS00Y2E3LWFlNjMtMjY2NTI5NjYzOTEwIiwiaWF0IjoxNjg0MjM5MzY0LCJleHAiOjE2ODQ0MTkzNjR9.Ejnv8vNIRUPyhyb4Sspt5OKYbT-5tSoGbxAoVHSOxnI",
          "refreshToken": "yyJhdfgGciOiJIUzI1NiIdfggh5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDYzNzM4NDI0YzA4MTJmMzNhMGEzZTMiLCJzZXNzaW9uS2V5IjoiNzdkZmZlNzctMTk0OS00Y2E3LWFlNjMtMjY2NTI5NjYzOTEwIiwiaWF0IjoxNjg0MjM5MzY0LCJleHAiOjE4NjQyMzkzNjR9.e6nyxd_k0OC7jUBHL_JHKcbCtymvmu4f8ihJWvvbbbnnk"
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "example": "6453bbe29b2611f1d181cb07"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
          },
          "phone": {
            "type": "string",
            "pattern": "^(^\\+380\\d{9}$)$"
          },
          "city": {
            "type": "string",
            "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
          },
          "image": {
            "type": "string",
            "format": "binary"
          },
          "favorite": {
            "type": "array",
            "items": {
                "$ref": "#/components/schemas/Favorite"
           }
          },
          "pets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PetsResponse"
           }
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notices"
           }
          }
        },
        "example": {
          "id": "6463738424c0812f33a0a3e3",
          "email": "user@example.com",
          "name": "Ivan",
          "birthday": "01.01.2000",
          "phone": "+380994455666",
          "city": "Lviv",
          "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684241239/o4m4tdkx5rm0bkum9sbd.png",
          "favorite": [
            {
              "_id": "646083f4874bee17c9118d2c",
              "title": "Friendly cat",
              "name": "Whiskers",
              "birthday": "01.01.2018",
              "breed": "Domestic Shorthair",
              "location": "New York City",
              "sex": "male",
              "category": "for-free",
              "email": "catlover@gmail.com",
              "phone": "+1-555-1234",
              "comments": "Whiskers is very friendly and loves cuddles. Looking for a new home as I am moving overseas.",
              "image": "https://source.unsplash.com/random?animals&cat&dog"
            }
          ],
          "pets": [
            {
              "_id": "646385d424c0812f33a0aae4",
              "name": "Lesyk",
              "birthday": "11.11.2020",
              "breed": "york",
              "comments": "Very fany dog",
              "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684243923/hvuhiz0m5yceo7rvwejo.png",
              "owner": "6463738424c0812f33a0a3e3"
            }
          ],
          "notices": [
            {
              "_id": "6463888c24c0812f33a0ab5a",
              "title": "My best friend",
              "name": "Rex",
              "birthday": "11.11.2015",
              "breed": "taksa",
              "location": "Sumy",
              "sex": "male",
              "category": "sell",
              "price": "400",
              "comments": "Difficult god",
              "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684244620/va96zncab7vq5srzfu2k.png",
              "owner": "6463738424c0812f33a0a3e3",
              "email": "user@example.com",
              "phone": "+380994455666"
            }
          ]
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string",
            "example": "Ivan"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$",
            "example": "01.01.2000"
          },
          "phone": {
            "type": "string",
            "pattern": "^(^\\+380\\d{9}$)$",
            "example": "+380994455666"
          },
          "city": {
            "type": "string",
            "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$",
            "example": "Lviv"
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "passwordHash": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$",
            "example": "01.01.2000"
          },
          "phone": {
            "type": "string",
            "pattern": "^(/^\\+380\\d{9}$/)$",
            "example": "+380994455666"
          },
          "city": {
            "type": "string",
            "pattern": "^(^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$)$",
            "example": "Lviv"
          },
          "image": {
            "type": "string",
            "format": "binary"
          },
          "favorite": {},
          "pets": {},
          "sessionKey": {
            "type": "string"
          }
        },
        "example": {
          "_id": "6463738424c0812f33a0a3e3",
          "name": "Ivan",
          "email": "user@example.com",
          "birthday": "01.01.2000",
          "phone": "+380994455666",
          "city": "Lviv",
          "image": "https://drive.google.com/file/d/1JKalmY5-x8wbrspY075e3N08K2e5LWnU/view"
        }
      },
      "AvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "example": {
          "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684241239/o4m4tdkx5rm0bkum9sbd.png"
        }
      },
      "FavoriteResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "pattern": "^(/^\\d{2}\\.\\d{2}\\.\\d{4}$/)$"
              },
              "phone": {
                "type": "string",
                "pattern": "^(/^\\+380\\d{9}$/)$"
              },
              "city": {
                "type": "string",
                "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
              },
              "image": {
                "type": "string",
                "format": "binary"
              },
              "favorite": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Favorite"
               }
              }
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "user": {
            "id": "6463738424c0812f33a0a3e3",
            "email": "user@example.com",
            "name": "Ivan",
            "birthday": "01.01.2000",
            "phone": "+380994455666",
            "city": "Lviv",
            "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684241239/o4m4tdkx5rm0bkum9sbd.png",
            "favorite": [
              {
                "_id": "646083f4874bee17c9118d2c",
                "title": "Friendly cat",
                "name": "Whiskers",
                "birthday": "01.01.2018",
                "breed": "Domestic Shorthair",
                "location": "New York City",
                "sex": "male",
                "category": "for-free",
                "email": "catlover@gmail.com",
                "phone": "+1-555-1234",
                "comments": "Whiskers is very friendly and loves cuddles. Looking for a new home as I am moving overseas.",
                "image": "https://source.unsplash.com/random?animals&cat&dog"
              }
            ]
          },
          "total": 1
        }
      },
      "AddFavoriteResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "passwordHash": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
              },
              "phone": {
                "type": "string",
                "pattern": "^(^\\+380\\d{9}$)$"
              },
              "city": {
                "type": "string",
                "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
              },
              "image": {
                "type": "string",
                "format": "binary"
              },
             "favorite": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Favorite"
               }
              }
            }
          }
        },
        "example": {
          "user": {
            "_id": "6463738424c0812f33a0a3e3",
            "name": "Ivan",
            "email": "user@example.com",
            "birthday": "01.01.2000",
            "phone": "+380994455666",
            "city": "Lviv",
            "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684241239/o4m4tdkx5rm0bkum9sbd.png",
            "favorite": [
              {
                "_id": "646083f4874bee17c9118d2c",
                "title": "Friendly cat",
                "name": "Whiskers",
                "birthday": "01.01.2018",
                "breed": "Domestic Shorthair",
                "location": "New York City",
                "sex": "male",
                "category": "for-free",
                "email": "catlover@gmail.com",
                "phone": "+1-555-1234",
                "comments": "Whiskers is very friendly and loves cuddles. Looking for a new home as I am moving overseas.",
                "image": "https://source.unsplash.com/random?animals&cat&dog"
              }
            ]
          }
        }
      },
      "DeleteFavoriteResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "passwordHash": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
              },
              "phone": {
                "type": "string",
                "pattern": "^(^\\+380\\d{9}$)$"
              },
              "city": {
                "type": "string",
                "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
              },
              "image": {
                "type": "string",
                "format": "binary"
              },
              "favorite": {},
              "pets": {},
              "sessionKey": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "user": {
            "_id": "6463738424c0812f33a0a3e3",
            "name": "Ivan",
            "email": "user@example.com",
            "birthday": "01.01.2000",
            "phone": "+380994455666",
            "city": "Lviv",
            "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684241239/o4m4tdkx5rm0bkum9sbd.png",
            "favorite": []
          }
        }
      },
      "NoticesRequest": {
        "type": "object",
        "required": [
          "title",
          "name",
          "birthday",
          "breed",
          "sex",
          "location",
          "category",
          "email",
          "phone",
          "avatar"
        ],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "pattern": "^(/^\\d{2}\\.\\d{2}\\.\\d{4}$/)$"
          },
          "breed": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "sex": {
            "type": "string",
            "enum": ["male", "female"]
          },
          "location": {
            "type": "string",
            "pattern": "^(/^[A-Za-z ]+$/)$",
            "minLength": 2,
            "maxLength": 50
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^(^\\+380\\d{9}$)$"
          },
          "comments": {
            "type": "string",
            "minLength": 8,
            "maxLength": 120
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "FindeTitleResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notices"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "notices": [
            {
              "_id": "646083f4874bee17c9118d1f",
              "title": "Graceful cat",
              "name": "Luna",
              "birthday": "20.03.2021",
              "breed": "Persian",
              "location": "Paris",
              "sex": "female",
              "category": "sell",
              "price": "1200$",
              "email": "user9@net.com",
              "phone": "+380661234567",
              "comments": "She has beautiful long fur and is very graceful!",
              "image": "https://source.unsplash.com/random?animals&cat&dog"
            }
          ],
          "total": 1
        }
      },
      "FavoriteNoticeResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notices"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "notices": [
            {
              "_id": "646083f4874bee17c9118d2c",
              "title": "Friendly cat",
              "name": "Whiskers",
              "birthday": "01.01.2018",
              "breed": "Domestic Shorthair",
              "location": "New York City",
              "sex": "male",
              "category": "for-free",
              "email": "catlover@gmail.com",
              "phone": "+1-555-1234",
              "comments": "Whiskers is very friendly and loves cuddles. Looking for a new home as I am moving overseas.",
              "image": "https://source.unsplash.com/random?animals&cat&dog"
            }
          ],
          "total": 1
        }
      },
      "OwnerResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "name": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "birthday": {
                  "type": "string",
                  "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
                },
                "breed": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "sex": {
                  "type": "string",
                  "enum": ["male ", "female"]
                },
                "location": {
                  "type": "string",
                  "pattern": "^(/^[A-Za-z ]+$/)$",
                  "minLength": 2,
                  "maxLength": 50
                },
                "category": {
                  "type": "string",
                  "enum": ["sell", "lost-found", "for-free"]
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(^\\+380\\d{9}$)$"
                },
                "comments": {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 120
                },
                "image": {
                  "type": "string",
                  "format": "binary"
                },
                "owner": {
                  "type": "string"
                }
              }
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "notices": [
            {
              "_id": "6463888c24c0812f33a0ab5a",
              "title": "My best friend",
              "name": "Rex",
              "birthday": "11.11.2015",
              "breed": "taksa",
              "location": "Sumy",
              "sex": "male",
              "category": "sell",
              "price": "400",
              "comments": "Difficult god",
              "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684244620/va96zncab7vq5srzfu2k.png",
              "owner": "6463738424c0812f33a0a3e3",
              "email": "user@example.com",
              "phone": "+380994455666"
            }
          ],
          "total": 1
        }
      },
      "NoticesUserResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "name": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "birthday": {
                  "type": "string",
                  "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
                },
                "breed": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "sex": {
                  "type": "string",
                  "enum": ["male ", "female"]
                },
                "location": {
                  "type": "string",
                  "pattern": "^(/^[A-Za-z ]+$/)$",
                  "minLength": 2,
                  "maxLength": 50
                },
                "category": {
                  "type": "string",
                  "enum": ["sell", "lost-found", "for-free"]
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(^\\+380\\d{9}$)$"
                },
                "comments": {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 120
                },
                "image": {
                  "type": "string",
                  "format": "binary"
                },
                "owner": {
                  "type": "string"
                }
              }
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "notices": [
            {
              "_id": "6463888c24c0812f33a0ab5a",
              "title": "My best friend",
              "name": "Rex",
              "birthday": "11.11.2015",
              "breed": "taksa",
              "location": "Sumy",
              "sex": "male",
              "category": "sell",
              "price": "400",
              "comments": "Difficult god",
              "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684244620/va96zncab7vq5srzfu2k.png",
              "owner": "6463738424c0812f33a0a3e3",
              "email": "user@example.com",
              "phone": "+380994455666"
            }
          ],
          "total": 1
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "workDays": {
              "$ref": "#/components/schemas/WorkDays"
            },
            "_id": {
              "type": "string"
            },
            " title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "addressUrl": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string",
              "default": false
            },
            "address": {
              "type": "string",
              "default": null
            },
            "phone": {
              "type": "string",
              "pattern": "^(/^\\+380\\d{9}$/)$",
              "default": null
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        },
        "example": [
          {
            "_id": "645b6171874bee17c911885d",
            "title": "Whiskas",
            "url": "https://www.whiskas.ua/",
            "addressUrl": null,
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_285.png",
            "address": null,
            "workDays": null,
            "phone": "0-800-500-155",
            "email": "whiskas@gmail.com"
          },
          {
            "_id": "645b6171874bee17c911885b",
            "title": "LICO",
            "url": "https://lico.vet/",
            "addressUrl": "https://goo.gl/maps/sub8u9TAAvLJRE9j9",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_292.png",
            "address": "Dryhetiv Street, 77",
            "workDays": [
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              },
              {
                "isOpen": true,
                "from": "09:00",
                "to": "20:00"
              }
            ],
            "phone": "+38 (097) 509-80-05",
            "email": "lico@gmail.com"
          }
        ]
      },
      "NewsResponse": {
        "type": "object",
        "properties": {
          "news": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 16
                },
                "url": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "default": null
                }
              }
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "example": {
          "news": [
            {
              "_id": "645b6944874bee17c9118864",
              "imgUrl": "https://www.nytimes.com/images/2023/03/15/nyregion/NY-FISH/NY-FISH-blog480.jpg",
              "title": "When Helpless Fish Need a Hero, She Answers the Call",
              "text": "Three hundred goldfish in a hospital basement, a suckermouth at the airport: When fish are in crisis, a Bronx beautician and a partner in Pennsylvania ride to the rescue.",
              "date": "2023-03-17T09:00:35+0000",
              "url": "https://www.nytimes.com/2023/03/17/nyregion/new-york-city-fish-rescue.html",
              "id": "nyt://article/7bce8e93-e6b3-5cb7-ad38-a361fa0d2812"
            },
            {
              "_id": "645b6944874bee17c911886a",
              "imgUrl": "https://www.nytimes.com/images/2023/02/04/multimedia/00xp-high-dogs-01-pmgh/00xp-high-dogs-01-pmgh-blog480.jpg",
              "title": "Nausea, Wobbling, Confusion: Dogs Are Getting Sick From Discarded Weed",
              "text": "In places where recreational use is legal, dogs are getting sick from eating the remains of joints and other cannabis products, veterinarians and poison-control centers say.",
              "date": "2023-02-13T14:02:29+0000",
              "url": "https://www.nytimes.com/2023/02/13/nyregion/dogs-weed-nyc.html",
              "id": "nyt://article/9cda24bb-5520-587b-97aa-039cd981ea91"
            }
          ],
          "total": 1151
        }
      },
      "PetsRequest": {
        "type": "object",
        "required": ["name", "birthday", "breed", "avatar"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$",
            "default": "00.00.0000"
          },
          "breed": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "comments": {
            "type": "string",
            "minLength": 8,
            "maxLength": 120
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "PetsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "integer",
            "minLength": 2,
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "pattern": "^(/^\\d{2}\\.\\d{2}\\.\\d{4}$/)$",
            "default": "00.00.0000"
          },
          "breed": {
            "type": "integer",
            "minLength": 2,
            "maxLength": 16
          },
          "photoURL": {
            "type": "string"
          },
          "comments": {
            "type": "integer",
            "minLength": 8,
            "maxLength": 120
          },
          "owner": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          }
        },
        "example": {
          "name": "Lesyk",
          "birthday": "11.11.2020",
          "breed": "york",
          "comments": "Very fany dog",
          "image": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684243923/hvuhiz0m5yceo7rvwejo.png",
          "owner": "6463738424c0812f33a0a3e3",
          "_id": "646385d424c0812f33a0aae4"
        }
      },
      "Favorite": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$"
          },
          "breed": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16
          },
          "sex": {
            "type": "string",
            "enum": ["male ", "female"]
          },
          "location": {
            "type": "string",
            "pattern": "^(/^[A-Za-z ]+$/)$",
            "minLength": 2,
            "maxLength": 50
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "price": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^(^\\+380\\d{9}$)$"
          },
          "comments": {
            "type": "string",
            "minLength": 8,
            "maxLength": 120
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Notices": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16,
            "example": "My best friend"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16,
            "example": "Rex"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(^\\d{2}\\.\\d{2}\\.\\d{4}$)$",
            "example": "11.11.2015"
          },
          "breed": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16,
            "example": "taksa"
          },
          "sex": {
            "type": "string",
            "enum": ["male", "female"],
            "example": "male"
          },
          "location": {
            "type": "string",
            "pattern": "^(/^[A-Za-z ]+$/)$",
            "minLength": 2,
            "maxLength": 50,
            "example": "Sumy"
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"],
            "example": "sell"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "pattern": "^(^\\+380\\d{9}$)$",
            "example": "+380994455666"
          },
          "comments": {
            "type": "string",
            "minLength": 8,
            "maxLength": 120,
            "example": "Difficult god"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/dosrxpfu8/image/upload/v1684244620/va96zncab7vq5srzfu2k.png"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "pattern": "^(/^\\d{2}\\.\\d{2}\\.\\d{4}$/)$"
          },
          "phone": {
            "type": "string",
            "pattern": "^(/^\\+380\\d{9}$/)$"
          },
          "city": {
            "type": "string",
            "pattern": "^(/^[A-Z][a-z]+(?:[\\s-][A-Z][a-z]+)*$/)$"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "WorkDays": {
        "type": "object",
        "properties": {
          "isOpen": {
            "type": "boolean",
            "default": true
          },
          "from": {
            "type": "number"
          },
          "to": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
